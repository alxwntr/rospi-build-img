# pkg.subr
# Functions for dealing with packages

# pkg_config ROOT
# Set globals based on the config
pkg_config () {
    local root="$1"

    pkg_root="$root"
}

# pkg_injail COMMAND
# Run COMMAND in the jail
pkg_injail () {
    [ -d "${pkg_root}" ] || die "No pkg_root!"
    chroot "$pkg_root" "$@"
}

# pkg_bootstrap
# Bootstrap the packaging system
pkg_bootstrap () {
    local srcs="${share_dir}/sources"
    local apt="${pkg_root}/etc/apt"

    say "Bootstrapping the system..."
    debootstrap "$dist_release" "$pkg_root" "$dist_mirror"

    say "Setting up apt..."
    install_dir "$apt"
    install_file "$srcs/${dist_release}" "$apt/sources.list"
    pkg_injail apt-get update
    pkg_injail apt-get -y dist-upgrade
}

# pkg_set_sources
# Set up the additional sources
pkg_set_sources () {
    local sfrom="${share_dir}/sources"
    local sto="${pkg_root}/etc/apt/sources.list.d"
    local kfrom="${share_dir}/gpgkeys"
    local kto="${pkg_root}/etc/apt/trusted.gpg.d"
    local s=

    if [ -n "${sources_lists}" ]
    then
        say "Setting up additional package sources..."
        install_dir "$sto"
        for s in ${sources_lists}
        do
            install_file "$sfrom/${s}.list" "$sto/${s}.list"
        done
    fi

    if [ -n "${sources_keys}" ]
    then
        say "Setting up keys for package sources..."
        install_dir "$kto"
        for s in ${sources_keys}
        do
            install_file "$kfrom/${s}.gpg" "$kto/${s}.gpg"
        done
    fi

    pkg_injail apt-get update
}

# pkg_install_pkgs
# Install the requested packages
pkg_install_pkgs () {
    say "Installing additional packages..."
    pkg_injail apt-get install -y ${packages_install}
}

# pkg_create_users
# Create the initial users
pkg_create_users () {
    say "Creating initial user accounts..."
    pkg_injail adduser --disabled-login --gecos "ROS Pi user" rospi
    pkg_injail chpasswd <<PASSWD
rospi:rospi
PASSWD
    pkg_injail passwd -e rospi
    pkg_injail usermod -a -G adm,sudo,plugdev rospi
}

# pkg_setup_network
# Perform the initial network configuration
pkg_setup_network () {
    say "Setting up network..."
    echo "rospi" >"$pkg_root/etc/hostname"
}

# pkg_clean_apt
# Clean the apt package cache
pkg_clean_apt () {
    say "Cleaning the apt cache..."
    pkg_injail apt-cache clean
}

# vi:set ft=sh:
